name: unittests

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - master
      - develop
      - "release/*"
  pull_request:
  release:
    types:
      - published

jobs:
  tests_graph:
    runs-on: ubuntu-latest
    timeout-minutes: 150
    strategy:
      max-parallel: 4
      fail-fast: False
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]
    name: JIT compiled tests for Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: mamba-org/setup-micromamba@v1
        name: Set up Micromamba environment
        with:
          environment-name: test-env
      # - name: Install ROOT
      #   run: |
      #     micromamba install -c conda-forge root -y
      - name: Install Python and dependencies
        run: |
          micromamba install python=${{ matrix.python-version }} pip -c conda-forge -y
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Test with pytest
        run: |
          coverage run --source=. --omit=".tox/*" --branch -m pytest .
          coverage report

  tests_eager:
    runs-on: ubuntu-latest
    timeout-minutes: 150
    strategy:
      max-parallel: 4
      fail-fast: False
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]
    name: Eager mode tests for Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - uses: mamba-org/setup-micromamba@v1
        name: Set up Micromamba environment
        with:
          environment-name: test-env
      # - name: Install ROOT
      #   run: |
      #     micromamba install -c conda-forge root -y
      - name: Install Python and dependencies
        run: |
          micromamba install python=${{ matrix.python-version }} pip -c conda-forge -y
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Test with pytest
        run: |
          ZFIT_DO_JIT=0
          coverage run --source=. --omit=".tox/*,*/test*," --branch -m pytest .
          coverage report
